# -*- coding: utf-8 -*-
"""pp lab assg 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A3cbg9zSTg07tcEWYfhAaxdPYoqL2-gr
"""

# Function to convert radians to degrees
import math
def radians_to_degrees(radians):
    degrees = radians * (180 / math.pi)
    return degrees
print(radians_to_degrees(math.pi / 2))
print(radians_to_degrees(math.pi))
print(radians_to_degrees(math.pi * 2))

def sort_numbers(numbers, order="none"):
    if order == "asc":
        numbers.sort()
    elif order == "desc":
        numbers.sort(reverse=True)
    return numbers
numbers = [5, 2, 8, 7, 1]
print(sort_numbers(numbers, "asc"))
print(sort_numbers(numbers, "desc"))
print(sort_numbers(numbers))

# Function to convert a decimal number less than 1024 to its equivalent binary number
def decimal_to_binary(decimal):
    if not isinstance(decimal, int) or decimal < 0 or decimal >= 1024:
        raise ValueError("decimal must be an integer between 0 and 1023")
    binary = bin(decimal)[2:]
    return binary.zfill(10)

# Test the function
print(decimal_to_binary(0))
print(decimal_to_binary(1))
print(decimal_to_binary(127))
print(decimal_to_binary(1023))

# Count the vowels in a string
def count_vowels(word):
    vowels = "aeiou"
    return sum(1 for char in word.lower() if char in vowels)
print(count_vowels("Python"))
print(count_vowels("Hello"))
print(count_vowels("World"))

# Function to hide all characters in a credit card number except the last four
def hide_credit_card_number(number):
    if not isinstance(number, str) or not all(char.isdigit() for char in number):
        raise ValueError("number must be a string of digits")
    return " **** **** **** " + number[-4:]
print(hide_credit_card_number("4444444444444444"))
print(hide_credit_card_number("1234567890123456"))
print(hide_credit_card_number("6789"))

# Function to check if the number of Xs and Os in a string are equal
def x_and_o_equal(string):
    x_count = sum(1 for char in string.lower() if char == "x")
    o_count = sum(1 for char in string.lower() if char == "o")
    return x_count == o_count
print(x_and_o_equal("xoxo"))
print(x_and_o_equal("xoox"))
print(x_and_o_equal("xxxx"))
print(x_and_o_equal("oooo"))

# Function to double each character in a string
def double_characters(string):
    if not isinstance(string, str):
        raise ValueError("string must be a string")
    return "".join(char * 2 for char in string)

print(double_characters("now"))
print(double_characters("123a!"))