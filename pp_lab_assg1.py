# -*- coding: utf-8 -*-
"""pp lab assg1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JwWammgbH4sU1WsElUrv3ZWhxoAS01Nq

**conditional** **statement** **programs**

---
"""

# Program to display the bio data of a student
name = input("Enter your name: ")
dob = input("Enter your date of birth: ")
age = input("Enter your age: ")
branch =input("Enter your branch: ")
college=input("Enter your college name:")
email = input("Enter your email id: ")
number=input("Enter your phone number: ")
print(f"Name: {name}\nDate Of Birth: {dob}\nAge: {age}\nBranch: {branch}\nCollege: {college}\nEmail id: {email}\nPhone number: {number}")

'''
 to find those numbers which are divisible by 7 and multiples of 5,
 between 1500 and 2700
'''
for number in range(1500, 2701):

   if number % 7 == 0 and number % 5 == 0:

       print(number)

# Python Program to find Total, Average of Five Subjects

english = int(input("Please enter English Marks: "))
math = int(input("Please enter Math score: "))
computers = int(input("Please enter Computer Marks: "))
physics = int(input("Please enter Physics Marks: "))
chemistry = int(input("Please enter Chemistry Marks: "))

total = english + math + computers + physics + chemistry
average = total / 5
print("\nTotal Marks = %2f" %total)
print("Average Marks = %2f"  %average)



# calculator
def calculator(operation, num1, num2):
    if operation == "add":
        result = num1 + num2
    elif operation == "subtract":
        result = num1 - num2
    elif operation == "multiply":
        result = num1 * num2
    elif operation == "divide":
        if num2 != 0:
            result = num1 / num2
        else:
            print("Error: Division by zero")
            return
    else:
        print("Error: Invalid operation")
        return
        print(f"Result: {result}")
calculator("add", 5, 3)
calculator("subtract", 10, 4)
calculator("multiply", 2, 7)
calculator("divide", 15, 3)
calculator("divide", 12, 4)
calculator("invalid_operation", 10, 5)

# Check whether the triangle is scalene, isosceles, equilateral
def check_triangle(a, b, c):
    # Check for equilateral triangle
    if a == b == c:
        return "Equilateral triangle"
    # Check for isosceles triangle
    elif a == b or b == c or a == c:
        return "Isosceles triangle"
    # Otherwise, it's a scalene triangle
    else:
        return "Scalene triangle"
a = int(input("Enter the length of side a: "))
b = int(input("Enter the length of side b: "))
c = int(input("Enter the length of side c: "))
print(check_triangle(a, b, c))

#a.	Swap two numbers Using temporary variable
# Initialize two variables with values 5 and 10
x = 5
y = 10

# Print the values of x and y before swapping
print("Before swapping:")
print("x =", x)
print("y =", y)

# Use a temporary variable to hold the value of x
temp = x

# Assign the value of y to x
x = y

# Assign the value of temp to y
y = temp

# Print the values of x and y after swapping
print("After swapping:")
print("x =", x)
print("y =", y)

#b.	Swap two numbers without Using temporary variable
# Initialize two variables with values 5 and 10
x = 5
y = 10

# Print the values of x and y before swapping
print("Before swapping:")
print("x =", x)
print("y =", y)

# Swap the values of x and y without using a temporary variable
x, y = y, x

# Print the values of x and y after swapping
print("After swapping:")
print("x =", x)
print("y =", y)

#FizzBuzz
def fizzBuzz(num):
    for i in range(0,num+1):
        if i % 3 == 0:
            print("Fizz")
        elif i % 5 == 0:
            print("Buzz")
        elif i % 3 == 0 and i % 5==0:
            print("FizzBuzz")
        else:
            print(i)
num = int(input())
fizzBuzz(num)

# Calculate the area of the triangle using Heron's formula
import math
s = (a + b + c) / 2
area = math.sqrt(s * (s - a) * (s - b) * (s - c))
a= int(input("Enter the length of side a: "))
b = int(input("Enter the length of side b: "))
c = int(input("Enter the length of side c: "))
print(area)

#Program to find the square and square root of the given number
import math
def find_square_and_square_root(num):
    square = num ** 2
    square_root = math.sqrt(num)
    return square, square_root
num = 5
square, square_root = find_square_and_square_root(num)
print(f"Square: {square}")
print(f"Square root: {square_root}")

# Check whether the given triangle is acute , obtuse or right angled
def triangleType(a, b, c):
    sa = (a** 2)
    sb = (b** 2)
    sc = (c** 2)
    if (sa == sc + sb or sb == sa+sc or sc == sa+sb):
        print("Right-angled triangle")
    elif (sa > sc + sb or sb > sa+sc or sc > sa+sb):
        print("Obtuse-angled triangle")
    else:
        print("Acute-angled triangle")

a = int(input("Enter side a: "))
b = int(input("Enter side b: "))
c = int(input("Enter side c: "))
triangleType(a, b, c)

# greatest among 3 numbers
def greatest_among_three(num1, num2, num3):
    if (num1 >= num2) and (num1 >= num3):
        greatest = num1
    elif (num2 >= num1) and (num2 >= num3):
        greatest = num2
    else:
        greatest = num3
    return greatest


num1 = int(input("Enter the first number: "))
num2 = int(input("Enter the second number: "))
num3 = int(input("Enter the third number: "))
greatest = greatest_among_three(num1, num2, num3)
print(f"Greatest: {greatest}")

# to print grades based on marks.
marks = int(input("Enter your marks: "))

if marks >= 80:
    print("Grade A")
elif marks >= 60:
    print("Grade B")
elif marks >= 50:
    print("Grade C")
else:
    print("Fail")

# the given year is leap year or not
year=int(input("Enter year to be checked:"))
if(year%4==0 and year%100!=0 or year%400==0):
    print("The year is a leap year!")
else:
    print("The year isn't a leap year!")

"""**loops**

---


"""

# program to guess a number between 1 and 9.
import random
number = random.randint(1, 9)
while True:
    guess = int(input("Guess a number between 1 and 9: "))
    if guess == number:
        print("Congratulations! You guessed the number correctly!")
        break
    elif guess < number:
        print("Too low! Try again.")
    else:
        print("Too high! Try again.")

# square of numbers between 1 and 20 (both included).
squares = []
for i in range(1, 21):
    square = i**2
    squares.append(square)
print(squares)

# pattern
for i in range(1, 6):
    for j in range(5 - i):
        print(' ', end='')
    for j in range(i):
        print('*', end='')
    print()

# Program to find the sum of the digits of a number
def sum_digits(n):
    sum = 0
    while n:
        sum += n % 10
        n //= 10
    return sum

# palindrome or not
def is_palindrome(n):
    original = n
    reverse = 0
    while n != 0:
        last_digit = n % 10
        reverse = reverse * 10 + last_digit
        n = n // 10

# to check the divisibility of two numbers using boolean function
def is_divisible(n, m):
    """
    Returns True if n is divisible by m, and False otherwise.
    """
    if n % m == 0:
        return True
    else:
        return False
num1 = 10
num2 = 3

if is_divisible(num1, num2):
    print(f"{num1} is divisible by {num2}.")
else:
    print(f"{num1} is not divisible by {num2}.")

# the number is prime or not
def is_prime(num):
  if num <= 1:
    return False
  for i in range(2, int(num**0.5) + 1):
    if num % i == 0:
      return False
  return True

# to check whether the number is in a given range
def in_range(n, start, end):
    while start <= end:
        if start == n:
            return True
        start += 1
    return False

# Example
num = 7
start = 5
end = 10

if in_range(num, start, end):
    print(f"{num} is in the range [{start}, {end}].")
else:
    print(f"{num} is not in the range [{start}, {end}].")

# Armstrong or not using functions
num = int(input())
sum = 0
while num > 0:
    rem = num % 10
    print(pow(rem,3))
    sum += pow(rem,3)
    num //= 10
print(sum)
while sum != num:
    print("It is armstrong number")
    break
if num == sum:
    print("It is armstrong number")
else:
    print("It is not armstrong number")

# given number is perfect or not using functions
def is_perfect_number(n):
  sum = 0
  for i in range(1, n):
    if n % i == 0:
      sum += i
  return sum == n

print(is_perfect_number(6))
print(is_perfect_number(28))

# factorial of the given number
n = int(input("enter a number:"))
factorial = 1
if n >=1:
    for i in range(1,n+1):
        factorial=factorial*i
print("factorial of given numberis:",factorial)

# Function to check if a number is prime
def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

# Function to print all prime numbers less than a given number
def print_primes(n):
    for num in range(2, n):
        if is_prime(num):
            print(num)

# Test the function
print_primes(20)



